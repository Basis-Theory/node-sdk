/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { BasisTheoryClient } from "../../src/Client";

describe("Documents", () => {
    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new BasisTheoryClient({ apiKey: "test", correlationId: "test", environment: server.baseUrl });

        const rawResponseBody = {
            id: "id",
            tenant_id: "tenant_id",
            metadata: { key: "value" },
            content_type: "content_type",
            created_by: "created_by",
            created_at: "2024-01-15T09:30:00Z",
        };
        server.mockEndpoint().get("/documents/id").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.documents.get("id");
        expect(response).toEqual({
            id: "id",
            tenantId: "tenant_id",
            metadata: {
                key: "value",
            },
            contentType: "content_type",
            createdBy: "created_by",
            createdAt: new Date("2024-01-15T09:30:00.000Z"),
        });
    });

    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new BasisTheoryClient({ apiKey: "test", correlationId: "test", environment: server.baseUrl });

        server.mockEndpoint().delete("/documents/id").respondWith().statusCode(200).build();

        const response = await client.documents.delete("id");
        expect(response).toEqual(undefined);
    });
});
