/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../../mock-server/MockServerPool";
import * as BasisTheory from "../../../../src/api/index";
import { BasisTheoryClient } from "../../../../src/Client";

describe("Domain", () => {
    test("registerAll", async () => {
        const server = mockServerPool.createServer();
        const client = new BasisTheoryClient({ apiKey: "test", correlationId: "test", environment: server.baseUrl });
        const rawRequestBody = {};
        const rawResponseBody = { domains: [{ domain: "domain", status: "status" }] };
        server
            .mockEndpoint()
            .put("/connections/apple-pay/domain-registration")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.connection.applePay.domain.registerAll({});
        expect(response).toEqual({
            domains: [
                {
                    domain: "domain",
                    status: "status",
                },
            ],
        });
    });
});
