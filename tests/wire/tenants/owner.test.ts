/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { BasisTheoryClient } from "../../../src/Client";

describe("Owner", () => {
    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new BasisTheoryClient({ apiKey: "test", correlationId: "test", environment: server.baseUrl });

        const rawResponseBody = {
            id: "id",
            tenant_id: "tenant_id",
            user: {
                id: "id",
                email: "email",
                provider: "provider",
                mfa_enrolled: true,
                first_name: "first_name",
                last_name: "last_name",
                picture: "picture",
            },
            role: "role",
            created_by: "created_by",
            created_date: "2024-01-15T09:30:00Z",
            modified_by: "modified_by",
            modified_at: "2024-01-15T09:30:00Z",
        };
        server
            .mockEndpoint()
            .get("/tenants/self/owner")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.tenants.owner.get();
        expect(response).toEqual({
            id: "id",
            tenant_id: "tenant_id",
            user: {
                id: "id",
                email: "email",
                provider: "provider",
                mfa_enrolled: true,
                first_name: "first_name",
                last_name: "last_name",
                picture: "picture",
            },
            role: "role",
            created_by: "created_by",
            created_date: "2024-01-15T09:30:00Z",
            modified_by: "modified_by",
            modified_at: "2024-01-15T09:30:00Z",
        });
    });
});
