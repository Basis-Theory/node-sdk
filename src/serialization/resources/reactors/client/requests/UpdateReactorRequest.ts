// This file was auto-generated by Fern from our API Definition.

import type * as BasisTheory from "../../../../../api/index.js";
import * as core from "../../../../../core/index.js";
import type * as serializers from "../../../../index.js";
import { Application } from "../../../../types/Application.js";
import { RuntimeOptions } from "../../../../types/RuntimeOptions.js";

export const UpdateReactorRequest: core.serialization.Schema<
    serializers.UpdateReactorRequest.Raw,
    BasisTheory.UpdateReactorRequest
> = core.serialization.object({
    name: core.serialization.string(),
    application: Application.optional(),
    code: core.serialization.string(),
    configuration: core.serialization
        .record(core.serialization.string(), core.serialization.string().optional())
        .optional(),
    runtime: core.serialization.string().optional(),
    options: RuntimeOptions.optional(),
});

export declare namespace UpdateReactorRequest {
    export interface Raw {
        name: string;
        application?: Application.Raw | null;
        code: string;
        configuration?: Record<string, string | null | undefined> | null;
        runtime?: string | null;
        options?: RuntimeOptions.Raw | null;
    }
}
