// This file was auto-generated by Fern from our API Definition.

import type * as BasisTheory from "../../../../../../../api/index.js";
import * as core from "../../../../../../../core/index.js";
import type * as serializers from "../../../../../../index.js";
import { AuthenticateThreeDsSessionRequest } from "../../../../../../types/AuthenticateThreeDsSessionRequest.js";
import { ThreeDsCallbackUrls } from "../../../../../../types/ThreeDsCallbackUrls.js";
import { ThreeDsDeviceInfo } from "../../../../../../types/ThreeDsDeviceInfo.js";

export const CreateThreeDsSessionRequest: core.serialization.Schema<
    serializers.threeds.CreateThreeDsSessionRequest.Raw,
    BasisTheory.threeds.CreateThreeDsSessionRequest
> = core.serialization.object({
    pan: core.serialization.string().optional(),
    tokenId: core.serialization.property("token_id", core.serialization.string().optional()),
    tokenIntentId: core.serialization.property("token_intent_id", core.serialization.string().optional()),
    type: core.serialization.string().optional(),
    device: core.serialization.string().optional(),
    webChallengeMode: core.serialization.property("web_challenge_mode", core.serialization.string().optional()),
    deviceInfo: core.serialization.property("device_info", ThreeDsDeviceInfo.optional()),
    authenticationRequest: core.serialization.property(
        "authentication_request",
        AuthenticateThreeDsSessionRequest.optional(),
    ),
    callbackUrls: core.serialization.property("callback_urls", ThreeDsCallbackUrls.optional()),
});

export declare namespace CreateThreeDsSessionRequest {
    export interface Raw {
        pan?: string | null;
        token_id?: string | null;
        token_intent_id?: string | null;
        type?: string | null;
        device?: string | null;
        web_challenge_mode?: string | null;
        device_info?: ThreeDsDeviceInfo.Raw | null;
        authentication_request?: AuthenticateThreeDsSessionRequest.Raw | null;
        callback_urls?: ThreeDsCallbackUrls.Raw | null;
    }
}
