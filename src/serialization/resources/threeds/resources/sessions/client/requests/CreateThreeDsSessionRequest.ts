/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../index";
import * as BasisTheory from "../../../../../../../api/index";
import * as core from "../../../../../../../core";
import { ThreeDsDeviceInfo } from "../../../../../../types/ThreeDsDeviceInfo";

export const CreateThreeDsSessionRequest: core.serialization.Schema<
    serializers.threeds.CreateThreeDsSessionRequest.Raw,
    BasisTheory.threeds.CreateThreeDsSessionRequest
> = core.serialization.object({
    pan: core.serialization.string().optional(),
    tokenId: core.serialization.property("token_id", core.serialization.string().optional()),
    tokenIntentId: core.serialization.property("token_intent_id", core.serialization.string().optional()),
    type: core.serialization.string().optional(),
    device: core.serialization.string().optional(),
    webChallengeMode: core.serialization.property("web_challenge_mode", core.serialization.string().optional()),
    deviceInfo: core.serialization.property("device_info", ThreeDsDeviceInfo.optional()),
});

export declare namespace CreateThreeDsSessionRequest {
    interface Raw {
        pan?: string | null;
        token_id?: string | null;
        token_intent_id?: string | null;
        type?: string | null;
        device?: string | null;
        web_challenge_mode?: string | null;
        device_info?: ThreeDsDeviceInfo.Raw | null;
    }
}
