/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as BasisTheory from "../../../../../api/index";
import * as core from "../../../../../core";
import { ReactorFormulaConfiguration } from "../../../../types/ReactorFormulaConfiguration";
import { ReactorFormulaRequestParameter } from "../../../../types/ReactorFormulaRequestParameter";

export const CreateReactorFormulaRequest: core.serialization.Schema<
    serializers.CreateReactorFormulaRequest.Raw,
    BasisTheory.CreateReactorFormulaRequest
> = core.serialization.object({
    id: core.serialization.string().optional(),
    type: core.serialization.string(),
    name: core.serialization.string(),
    description: core.serialization.string().optional(),
    icon: core.serialization.string().optional(),
    code: core.serialization.string().optional(),
    configuration: core.serialization.list(ReactorFormulaConfiguration).optional(),
    requestParameters: core.serialization.property(
        "request_parameters",
        core.serialization.list(ReactorFormulaRequestParameter).optional()
    ),
});

export declare namespace CreateReactorFormulaRequest {
    interface Raw {
        id?: string | null;
        type: string;
        name: string;
        description?: string | null;
        icon?: string | null;
        code?: string | null;
        configuration?: ReactorFormulaConfiguration.Raw[] | null;
        request_parameters?: ReactorFormulaRequestParameter.Raw[] | null;
    }
}
