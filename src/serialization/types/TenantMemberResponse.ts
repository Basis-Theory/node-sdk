/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as BasisTheory from "../../api/index.js";
import * as core from "../../core/index.js";
import { User } from "./User.js";

export const TenantMemberResponse: core.serialization.ObjectSchema<
    serializers.TenantMemberResponse.Raw,
    BasisTheory.TenantMemberResponse
> = core.serialization.object({
    id: core.serialization.string().optional(),
    tenantId: core.serialization.property("tenant_id", core.serialization.string().optional()),
    user: User.optional(),
    role: core.serialization.string().optional(),
    createdBy: core.serialization.property("created_by", core.serialization.string().optional()),
    createdDate: core.serialization.property("created_date", core.serialization.date().optional()),
    modifiedBy: core.serialization.property("modified_by", core.serialization.string().optional()),
    modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
});

export declare namespace TenantMemberResponse {
    export interface Raw {
        id?: string | null;
        tenant_id?: string | null;
        user?: User.Raw | null;
        role?: string | null;
        created_by?: string | null;
        created_date?: string | null;
        modified_by?: string | null;
        modified_at?: string | null;
    }
}
