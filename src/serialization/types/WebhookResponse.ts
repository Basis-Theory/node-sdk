/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as BasisTheory from "../../api/index";
import * as core from "../../core";
import { WebhookResponseStatus } from "./WebhookResponseStatus";

export const WebhookResponse: core.serialization.ObjectSchema<
    serializers.WebhookResponse.Raw,
    BasisTheory.WebhookResponse
> = core.serialization.object({
    id: core.serialization.string(),
    tenantId: core.serialization.property("tenant_id", core.serialization.string()),
    status: WebhookResponseStatus,
    name: core.serialization.string(),
    url: core.serialization.string(),
    events: core.serialization.list(core.serialization.string()),
    createdBy: core.serialization.property("created_by", core.serialization.string()),
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    modifiedBy: core.serialization.property("modified_by", core.serialization.string()),
    modifiedAt: core.serialization.property("modified_at", core.serialization.date()),
});

export declare namespace WebhookResponse {
    interface Raw {
        id: string;
        tenant_id: string;
        status: WebhookResponseStatus.Raw;
        name: string;
        url: string;
        events: string[];
        created_by: string;
        created_at: string;
        modified_by: string;
        modified_at: string;
    }
}
