/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as BasisTheory from "../../api/index";
import * as core from "../../core";
import { TokenMetrics } from "./TokenMetrics";

export const TokenReport: core.serialization.ObjectSchema<serializers.TokenReport.Raw, BasisTheory.TokenReport> =
    core.serialization.object({
        includedMonthlyActiveTokens: core.serialization.property(
            "included_monthly_active_tokens",
            core.serialization.number().optional()
        ),
        monthlyActiveTokens: core.serialization.property(
            "monthly_active_tokens",
            core.serialization.number().optional()
        ),
        metricsByType: core.serialization.property(
            "metrics_by_type",
            core.serialization.record(core.serialization.string(), TokenMetrics.optional()).optional()
        ),
        totalTokens: core.serialization.property("total_tokens", core.serialization.number().optional()),
    });

export declare namespace TokenReport {
    interface Raw {
        included_monthly_active_tokens?: number | null;
        monthly_active_tokens?: number | null;
        metrics_by_type?: Record<string, TokenMetrics.Raw | null | undefined> | null;
        total_tokens?: number | null;
    }
}
