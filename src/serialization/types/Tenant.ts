// This file was auto-generated by Fern from our API Definition.

import type * as BasisTheory from "../../api/index.js";
import * as core from "../../core/index.js";
import type * as serializers from "../index.js";

export const Tenant: core.serialization.ObjectSchema<serializers.Tenant.Raw, BasisTheory.Tenant> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        ownerId: core.serialization.property("owner_id", core.serialization.string().optional()),
        name: core.serialization.string().optional(),
        type: core.serialization.string().optional(),
        createdBy: core.serialization.property("created_by", core.serialization.string().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        modifiedBy: core.serialization.property("modified_by", core.serialization.string().optional()),
        modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
        settings: core.serialization
            .record(core.serialization.string(), core.serialization.string().optional())
            .optional(),
    });

export declare namespace Tenant {
    export interface Raw {
        id?: string | null;
        owner_id?: string | null;
        name?: string | null;
        type?: string | null;
        created_by?: string | null;
        created_at?: string | null;
        modified_by?: string | null;
        modified_at?: string | null;
        settings?: Record<string, string | null | undefined> | null;
    }
}
