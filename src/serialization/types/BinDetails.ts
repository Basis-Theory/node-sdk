/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as BasisTheory from "../../api/index.js";
import * as core from "../../core/index.js";
import { BinDetailsBank } from "./BinDetailsBank.js";
import { BinDetailsProduct } from "./BinDetailsProduct.js";
import { BinDetailsCountry } from "./BinDetailsCountry.js";

export const BinDetails: core.serialization.ObjectSchema<serializers.BinDetails.Raw, BasisTheory.BinDetails> =
    core.serialization.object({
        cardBrand: core.serialization.property("card_brand", core.serialization.string().optional()),
        type: core.serialization.string().optional(),
        prepaid: core.serialization.boolean().optional(),
        cardSegmentType: core.serialization.property("card_segment_type", core.serialization.string().optional()),
        bank: BinDetailsBank.optional(),
        product: BinDetailsProduct.optional(),
        country: BinDetailsCountry.optional(),
        reloadable: core.serialization.boolean().optional(),
        panOrToken: core.serialization.property("pan_or_token", core.serialization.string().optional()),
        accountUpdater: core.serialization.property("account_updater", core.serialization.boolean().optional()),
        alm: core.serialization.boolean().optional(),
        domesticOnly: core.serialization.property("domestic_only", core.serialization.boolean().optional()),
        gamblingBlocked: core.serialization.property("gambling_blocked", core.serialization.boolean().optional()),
        level2: core.serialization.boolean().optional(),
        level3: core.serialization.boolean().optional(),
        issuerCurrency: core.serialization.property("issuer_currency", core.serialization.string().optional()),
        comboCard: core.serialization.property("combo_card", core.serialization.string().optional()),
        binLength: core.serialization.property("bin_length", core.serialization.number().optional()),
        authentication: core.serialization.unknown().optional(),
        cost: core.serialization.unknown().optional(),
    });

export declare namespace BinDetails {
    export interface Raw {
        card_brand?: string | null;
        type?: string | null;
        prepaid?: boolean | null;
        card_segment_type?: string | null;
        bank?: BinDetailsBank.Raw | null;
        product?: BinDetailsProduct.Raw | null;
        country?: BinDetailsCountry.Raw | null;
        reloadable?: boolean | null;
        pan_or_token?: string | null;
        account_updater?: boolean | null;
        alm?: boolean | null;
        domestic_only?: boolean | null;
        gambling_blocked?: boolean | null;
        level2?: boolean | null;
        level3?: boolean | null;
        issuer_currency?: string | null;
        combo_card?: string | null;
        bin_length?: number | null;
        authentication?: unknown | null;
        cost?: unknown | null;
    }
}
