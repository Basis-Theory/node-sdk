// This file was auto-generated by Fern from our API Definition.

import type { BaseClientOptions } from "../../../../BaseClient.js";
import { Connections } from "../resources/connections/client/Client.js";
import { Invitations } from "../resources/invitations/client/Client.js";
import { Members } from "../resources/members/client/Client.js";
import { Owner } from "../resources/owner/client/Client.js";
import { Self } from "../resources/self/client/Client.js";

export declare namespace Tenants {
    export interface Options extends BaseClientOptions {}
}

export class Tenants {
    protected readonly _options: Tenants.Options;
    protected _connections: Connections | undefined;
    protected _invitations: Invitations | undefined;
    protected _members: Members | undefined;
    protected _owner: Owner | undefined;
    protected _self: Self | undefined;

    constructor(_options: Tenants.Options = {}) {
        this._options = _options;
    }

    public get connections(): Connections {
        return (this._connections ??= new Connections(this._options));
    }

    public get invitations(): Invitations {
        return (this._invitations ??= new Invitations(this._options));
    }

    public get members(): Members {
        return (this._members ??= new Members(this._options));
    }

    public get owner(): Owner {
        return (this._owner ??= new Owner(this._options));
    }

    public get self(): Self {
        return (this._self ??= new Self(this._options));
    }
}
