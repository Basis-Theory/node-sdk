// This file was auto-generated by Fern from our API Definition.

import { AccountUpdater } from "./api/resources/accountUpdater/client/Client.js";
import { ApplePay } from "./api/resources/applePay/client/Client.js";
import { ApplicationKeys } from "./api/resources/applicationKeys/client/Client.js";
import { Applications } from "./api/resources/applications/client/Client.js";
import { ApplicationTemplates } from "./api/resources/applicationTemplates/client/Client.js";
import { Documents } from "./api/resources/documents/client/Client.js";
import { Enrichments } from "./api/resources/enrichments/client/Client.js";
import { GooglePay } from "./api/resources/googlePay/client/Client.js";
import { Keys } from "./api/resources/keys/client/Client.js";
import { Logs } from "./api/resources/logs/client/Client.js";
import { NetworkTokens } from "./api/resources/networkTokens/client/Client.js";
import { Permissions } from "./api/resources/permissions/client/Client.js";
import { Proxies } from "./api/resources/proxies/client/Client.js";
import { Reactors } from "./api/resources/reactors/client/Client.js";
import { Roles } from "./api/resources/roles/client/Client.js";
import { Sessions } from "./api/resources/sessions/client/Client.js";
import { Tenants } from "./api/resources/tenants/client/Client.js";
import { Threeds } from "./api/resources/threeds/client/Client.js";
import { TokenIntents } from "./api/resources/tokenIntents/client/Client.js";
import { Tokens } from "./api/resources/tokens/client/Client.js";
import { Webhooks } from "./api/resources/webhooks/client/Client.js";
import type { BaseClientOptions, BaseRequestOptions } from "./BaseClient.js";
import { mergeHeaders } from "./core/headers.js";
import * as core from "./core/index.js";

export declare namespace BasisTheoryClient {
    export interface Options extends BaseClientOptions {}

    export interface RequestOptions extends BaseRequestOptions {}
}

export class BasisTheoryClient {
    protected readonly _options: BasisTheoryClient.Options;
    protected _applications: Applications | undefined;
    protected _applicationKeys: ApplicationKeys | undefined;
    protected _applicationTemplates: ApplicationTemplates | undefined;
    protected _applePay: ApplePay | undefined;
    protected _googlePay: GooglePay | undefined;
    protected _documents: Documents | undefined;
    protected _tokens: Tokens | undefined;
    protected _enrichments: Enrichments | undefined;
    protected _keys: Keys | undefined;
    protected _logs: Logs | undefined;
    protected _networkTokens: NetworkTokens | undefined;
    protected _permissions: Permissions | undefined;
    protected _proxies: Proxies | undefined;
    protected _reactors: Reactors | undefined;
    protected _roles: Roles | undefined;
    protected _sessions: Sessions | undefined;
    protected _tokenIntents: TokenIntents | undefined;
    protected _webhooks: Webhooks | undefined;
    protected _accountUpdater: AccountUpdater | undefined;
    protected _tenants: Tenants | undefined;
    protected _threeds: Threeds | undefined;

    constructor(_options: BasisTheoryClient.Options = {}) {
        this._options = {
            ..._options,
            headers: mergeHeaders(
                {
                    "BT-TRACE-ID": _options?.correlationId,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "@basis-theory/node-sdk",
                    "X-Fern-SDK-Version": "0.0.1",
                    "User-Agent": "@basis-theory/node-sdk/0.0.1",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version,
                },
                _options?.headers,
            ),
        };
    }

    public get applications(): Applications {
        return (this._applications ??= new Applications(this._options));
    }

    public get applicationKeys(): ApplicationKeys {
        return (this._applicationKeys ??= new ApplicationKeys(this._options));
    }

    public get applicationTemplates(): ApplicationTemplates {
        return (this._applicationTemplates ??= new ApplicationTemplates(this._options));
    }

    public get applePay(): ApplePay {
        return (this._applePay ??= new ApplePay(this._options));
    }

    public get googlePay(): GooglePay {
        return (this._googlePay ??= new GooglePay(this._options));
    }

    public get documents(): Documents {
        return (this._documents ??= new Documents(this._options));
    }

    public get tokens(): Tokens {
        return (this._tokens ??= new Tokens(this._options));
    }

    public get enrichments(): Enrichments {
        return (this._enrichments ??= new Enrichments(this._options));
    }

    public get keys(): Keys {
        return (this._keys ??= new Keys(this._options));
    }

    public get logs(): Logs {
        return (this._logs ??= new Logs(this._options));
    }

    public get networkTokens(): NetworkTokens {
        return (this._networkTokens ??= new NetworkTokens(this._options));
    }

    public get permissions(): Permissions {
        return (this._permissions ??= new Permissions(this._options));
    }

    public get proxies(): Proxies {
        return (this._proxies ??= new Proxies(this._options));
    }

    public get reactors(): Reactors {
        return (this._reactors ??= new Reactors(this._options));
    }

    public get roles(): Roles {
        return (this._roles ??= new Roles(this._options));
    }

    public get sessions(): Sessions {
        return (this._sessions ??= new Sessions(this._options));
    }

    public get tokenIntents(): TokenIntents {
        return (this._tokenIntents ??= new TokenIntents(this._options));
    }

    public get webhooks(): Webhooks {
        return (this._webhooks ??= new Webhooks(this._options));
    }

    public get accountUpdater(): AccountUpdater {
        return (this._accountUpdater ??= new AccountUpdater(this._options));
    }

    public get tenants(): Tenants {
        return (this._tenants ??= new Tenants(this._options));
    }

    public get threeds(): Threeds {
        return (this._threeds ??= new Threeds(this._options));
    }
}
